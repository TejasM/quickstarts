<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.jboss.as.quickstarts</groupId>
  <artifactId>jboss-as-kitchensink</artifactId>
  <version>7.0.2.CR1</version>
  <packaging>war</packaging>

  <name>JBoss AS Quickstarts: Kitchensink</name>
  <description></description>
  <licenses>
	<license>
	  <name>Apache License, Version 2.0</name>
	  <distribution>repo</distribution>
	  <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
	</license>
  </licenses>

  <properties>
    <!-- Explicitly declaring the source encoding eliminates the following 
       message: -->
    <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
       resources, i.e. build is platform dependent! -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Timestamp format for the maven.build.timestamp property -->
    <!-- You can reference property in pom.xml or filtered resources (must 
       enable third-party plugin if using Maven < 2.1) -->
	<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
    <!-- Specify the JBoss AS directory to be the JBOSS_HOME environment 
       variable -->
	<jboss.home>${env.JBOSS_HOME}</jboss.home>
	<!-- Specify the version of the Spring Framework dependencies to be used -->
	<spring.framework.version>3.1.1.RELEASE</spring.framework.version>
  </properties>

  <dependencyManagement>
	<dependencies>
       <!-- Define the version of JBoss' Java EE 6 APIs we want to import. 
          Any dependencies from org.jboss.spec will have their version defined by this 
          BOM -->
       <!-- JBoss distributes a complete set of Java EE 6 APIs including 
          a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
          a collection) of artifacts. We use this here so that we always get the correct 
          versions of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can 
          read this as the JBoss stack of the Java EE Web Profile 6 APIs), and we use 
          version 2.0.0.Beta1 which is the latest release of the stack. You can actually 
          use this stack with any version of JBoss AS that implements Java EE 6, not 
          just JBoss AS 7! -->

	  <dependency>
	  	<groupId>org.jboss.spec</groupId>
	  	<artifactId>jboss-javaee-web-6.0</artifactId>
	  	<version>2.0.0.Final</version>
	  	<type>pom</type>
	  	<scope>import</scope>
	  </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- First declare the APIs we depend on and need for compilation.
       All of them are provided by JBoss AS 7 -->

    <!-- Import the necessary Spring Framework dependencies -->

	<dependency>
	  <groupId>javax.validation</groupId>
	  <artifactId>validation-api</artifactId>
	  <version>1.0.0.GA</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-asm</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-beans</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context-support</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-core</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-expression</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-orm</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-web</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc</artifactId>
	  <version>${spring.framework.version}</version>
	</dependency>

    <!-- Import the JPA API, we use provided scope as the API is included 
       in JBoss AS 7 -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Import the JPA API, we use provided scope as the API is included 
       in JBoss AS 7 -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Needed for running tests (you may also use TestNG) -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <!-- Optional, but highly recommended -->
    <!-- Arquillian allows you to test enterprise code such as EJBs and 
       Transactional(JTA) JPA from JUnit/TestNG -->
    <dependency>
       <groupId>org.jboss.arquillian.junit</groupId>
       <artifactId>arquillian-junit-container</artifactId>
       <version>1.0.0.CR4</version>
       <scope>test</scope>
    </dependency>

  </dependencies>

   <build>
     <!-- Maven will append the version to the finalName (which is the name 
       given to the generated war, and hence the context root) -->
     <finalName>${project.artifactId}</finalName>
     <plugins>
       <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
          annotation processors -->
       <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.1</version>
          <configuration>
             <source>1.6</source>
             <target>1.6</target>
          </configuration>
       </plugin>
       <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.1.1</version>
          <configuration>
             <!-- Java EE 6 doesn't require web.xml, Maven needs to catch 
                up! -->
             <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
       </plugin>
      </plugins>
   </build>
</project>
